{"version":3,"sources":["logo.svg","loading.svg","components/Header.js","components/Word.js","components/Input.js","components/RetryButton.js","components/Timer.js","components/Result.js","components/Overlay.js","components/Footer.js","components/Links.js","components/Brand.js","components/WordLength.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Word","props","_props$item","item","word","isCorrect","isDoneTyping","isCurrent","style","display","color","backgroundColor","borderRadius","Input","type","placeholder","animation","animate","value","typedWord","trim","onChange","e","handleChange","onKeyDown","handleKeyPress","disabled","isDone","isFetching","RetryButton","onClick","handleClick","Timer","_props$time","time","min","sec","concat","Result","_props$result","result","accuracy","numOfCorrectWords","numOfMistakes","keyStrokes","toFixed","Overlay","wpm","state","tagLine","makeTagline","src","loading","alt","Footer","Links","href","target","Brand","logo","WordLength","wordLength","background","name","checked","App","words","currentIndex","index","letterIndex","error","numOfWordsTyped","timesUp","timerID","started","componentDidMount","axios","get","then","res","data","_this","setState","prevState","countDown","clearInterval","typed","length","timer1","setInterval","substring","which","console","log","lastWordIndex","_this$state","this","displayComponent","map","components_Word","key","react","components_Header","components_Brand","height","width","components_Overlay","components_Timer","components_Input","components_RetryButton","components_WordLength","components_Result","components_Links","components_Footer","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.cc99b5a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.61caf358.svg\";","module.exports = __webpack_public_path__ + \"static/media/loading.d00011d7.svg\";","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>How fast can you type?</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Word = props => {\r\n    let { word, isCorrect, isDoneTyping, isCurrent } = props.item\r\n\r\n    return (\r\n        <span\r\n            className=\"word\"\r\n            style={{\r\n                display: 'inline',\r\n                color:\r\n                    isDoneTyping && isCorrect\r\n                        ? '#1dd1a1'\r\n                        : isDoneTyping && !isCorrect && '#ff6b6b',\r\n                backgroundColor: isCurrent && 'rgba(200, 214, 229, 0.5)',\r\n                borderRadius: '1.5rem'\r\n            }}\r\n        >\r\n            {word}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Word\r\n","import React from 'react'\r\n\r\nconst Input = props => {\r\n    return (\r\n        <div className=\"input-container\">\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"type here\"\r\n                style={{ animation: props.animate && 'push 0.1s' }}\r\n                value={props.typedWord.trim()}\r\n                onChange={e => props.handleChange(e)}\r\n                onKeyDown={e => props.handleKeyPress(e)}\r\n                disabled={props.isDone || props.isFetching}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\n\r\nconst RetryButton = props => {\r\n    return (\r\n        <button className=\"btn-retry\" onClick={e => props.handleClick(e)}>\r\n            <i className=\"fas fa-redo\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default RetryButton\r\n","import React from 'react'\r\n\r\nconst Timer = props => {\r\n    let { min, sec } = props.time\r\n    return (\r\n        <div\r\n            className=\"timer\"\r\n            style={{\r\n                animation: sec <= 10 && 'vibrate .5s linear',\r\n                backgroundColor: sec <= 10 && '#ff6b6b'\r\n            }}\r\n        >\r\n            <i className=\"fas fa-stopwatch\" />\r\n            <span className=\"min\"> {min < 10 ? `0${min}` : min}</span>\r\n            <span className=\"colon\"> : </span>\r\n            <span className=\"sec\">{sec < 10 ? `0${sec}` : sec}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\n\r\nconst Result = props => {\r\n    const {\r\n        accuracy,\r\n        numOfCorrectWords,\r\n        numOfMistakes,\r\n        keyStrokes\r\n    } = props.result\r\n\r\n    return (\r\n        <div className=\"result\">\r\n            <h3>\r\n                <i className=\"fas fa-clipboard-check\" /> results\r\n            </h3>\r\n            <p>\r\n                <span className=\"lbl\">accuracy: </span>\r\n                <span className=\"value\">{accuracy.toFixed(2)}%</span>\r\n            </p>\r\n\r\n            <p>\r\n                <span className=\"lbl\">correct words: </span>\r\n                <span className=\"value\">{numOfCorrectWords}</span>\r\n            </p>\r\n\r\n            <p>\r\n                <span className=\"lbl\">mistakes: </span>\r\n                <span className=\"value\">{numOfMistakes}</span>\r\n            </p>\r\n\r\n            <p>\r\n                <span className=\"lbl\">keystrokes: </span>\r\n                <span className=\"value\">{keyStrokes}</span>\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result\r\n","import React from 'react'\r\nimport loading from '../loading.svg'\r\n\r\nconst Overlay = props => {\r\n    let { wpm, state } = props\r\n    let tagLine = ''\r\n\r\n    const makeTagline = wpm => {\r\n        if (wpm === 0) return 'did you even touch the keyboard?'\r\n        if (wpm <= 20) return 'too bad !'\r\n        if (wpm >= 20 && wpm <= 30) return 'too slow !'\r\n        if (wpm >= 30 && wpm <= 40) return 'keep it up !'\r\n        if (wpm >= 40 && wpm <= 50) return 'pretty good !'\r\n        if (wpm >= 50 && wpm <= 60) return 'fast enough !'\r\n        if (wpm >= 60 && wpm <= 70) return 'you rock !'\r\n        if (wpm >= 70 && wpm <= 80) return 'fascinating !'\r\n        if (wpm > 120) return 'a keyboard ninja !'\r\n    }\r\n\r\n    state === 'fetching'\r\n        ? (tagLine = 'fetching random words')\r\n        : (tagLine = makeTagline(wpm))\r\n\r\n    return (\r\n        <div className=\"overlay\">\r\n            <h1 style={{ animation: 'vibrate 0.5s' }}>{tagLine}</h1>\r\n            <h2>\r\n                {state === 'fetching'\r\n                    ? `please wait`\r\n                    : wpm <= 1\r\n                    ? `${wpm} word per minute`\r\n                    : `${wpm} words per minute`}\r\n\r\n                {state === 'fetching' && (\r\n                    <div className=\"loading-cont\">\r\n                        <img\r\n                            className=\"first\"\r\n                            src={loading}\r\n                            alt=\"loading animation\"\r\n                        />\r\n                        <img\r\n                            className=\"second\"\r\n                            src={loading}\r\n                            alt=\"loading animation\"\r\n                        />\r\n                        <img\r\n                            className=\"third\"\r\n                            src={loading}\r\n                            alt=\"loading animation\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Overlay\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; rcob 2019</p>\r\n            <p>\r\n                Powered by React <i className=\"fab fa-react\" />\r\n            </p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Links = () => {\r\n    return (\r\n        <div className=\"links\">\r\n            <div className=\"fb\">\r\n                <a href=\"https://facebook.com\" target=\"blank\">\r\n                    <i className=\"fab fa-facebook-f\" />\r\n                </a>\r\n                <span className=\"tooltip\">\r\n                    https://facebook.com/rcobthegreat\r\n                </span>\r\n            </div>\r\n            <div className=\"gmail\">\r\n                <a href=\"https://gmail.com\">\r\n                    <i className=\"fab fa-google\" />\r\n                </a>\r\n                <span className=\"tooltip\">ronelcarlo.berino@gmail.com</span>\r\n            </div>\r\n            <div className=\"github\">\r\n                <a href=\"https://github.com/RonelTheGreat\" target=\"blank\">\r\n                    <i className=\"fab fa-github fa-2x\" />\r\n                </a>\r\n                <span className=\"tooltip\">\r\n                    https://github.com/RonelTheGreat\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Links\r\n","import React from 'react'\r\nimport logo from '../logo.svg'\r\n\r\nconst Brand = () => {\r\n    return (\r\n        <div className=\"brand\">\r\n            <img src={logo} alt=\"brand\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Brand\r\n","import React from 'react'\r\n\r\nconst WordLength = props => {\r\n    const { wordLength, handleChange } = props\r\n\r\n    return (\r\n        <div className=\"wordlength-cont\">\r\n            <h4>choose a word length</h4>\r\n            <div className=\"wordlength-option\">\r\n                <div\r\n                    className=\"short\"\r\n                    style={{\r\n                        background: wordLength === 'short' && '#1dd1a1'\r\n                    }}\r\n                >\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"wordlength\"\r\n                        value=\"short\"\r\n                        checked={wordLength === 'short'}\r\n                        onChange={e => handleChange(e)}\r\n                    />\r\n                    <span>short</span>\r\n                </div>\r\n                <div\r\n                    className=\"medium\"\r\n                    style={{\r\n                        background: wordLength === 'medium' && '#feca57'\r\n                    }}\r\n                >\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"wordlength\"\r\n                        value=\"medium\"\r\n                        checked={wordLength === 'medium'}\r\n                        onChange={e => handleChange(e)}\r\n                    />\r\n                    <span>medium</span>\r\n                </div>\r\n                <div\r\n                    className=\"long\"\r\n                    style={{\r\n                        background: props.wordLength === 'long' && '#ff6b6b'\r\n                    }}\r\n                >\r\n                    <input\r\n                        type=\"radio\"\r\n                        name=\"wordlength\"\r\n                        value=\"long\"\r\n                        checked={wordLength === 'long'}\r\n                        onChange={e => handleChange(e)}\r\n                    />\r\n                    <span>long</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WordLength\r\n","import React, { Component, Fragment } from 'react'\nimport Header from './components/Header'\nimport Word from './components/Word'\nimport Input from './components/Input'\nimport RetryButton from './components/RetryButton'\nimport Timer from './components/Timer'\nimport Result from './components/Result'\nimport Overlay from './components/Overlay'\nimport Footer from './components/Footer'\nimport Links from './components/Links'\nimport Brand from './components/Brand'\nimport WordLength from './components/WordLength'\n\nimport axios from 'axios'\n\nimport './App.css'\n\nclass App extends Component {\n    state = {\n        words: [],\n        typedWord: '',\n        currentIndex: 0,\n        index: 0,\n        letterIndex: 0,\n        time: {\n            min: 0,\n            sec: 60\n        },\n        wpm: 0,\n        numOfCorrectWords: 0,\n        numOfMistakes: 0,\n        keyStrokes: 0,\n        error: 0,\n        accuracy: 0,\n        numOfWordsTyped: 0,\n        timesUp: false,\n        isFetching: true,\n        isDone: false,\n        timerID: null,\n        started: false,\n        wordLength: 'short'\n    }\n\n    componentDidMount = () => {\n        axios\n            .get('http://localhost:5000/api/short/words')\n            .then(res => res.data)\n            .then(data => {\n                this.setState(prevState => {\n                    prevState.words = data.words\n                    // set the first item the current item for highlighting\n                    prevState.words[this.state.index][0].isCurrent = true\n                    prevState.isFetching = false\n                    return prevState\n                })\n            })\n    }\n\n    countDown = () => {\n        // if second is NOT equal to zero and there is remaining time\n        // exit function returning the decremented sec\n        if (!this.state.time.sec <= 0 && !this.state.timesUp) {\n            return this.setState(prevState => (prevState.time.sec -= 1))\n        }\n\n        // if time is up, stop counter\n        clearInterval(this.state.timerID)\n        // reset seconds to 60\n        // set timesUp to true\n        // isDone typing to true\n        this.setState(prevState => {\n            prevState.timesUp = true\n            prevState.time.sec = 60\n            prevState.isDone = true\n            prevState.typedWord = ''\n            prevState.words = []\n            return prevState\n        })\n    }\n\n    handleClick = e => {\n        // reset states\n        this.setState({\n            words: [],\n            wpm: 0,\n            typedWord: '',\n            currentIndex: 0,\n            index: 0,\n            letterIndex: 0,\n            time: {\n                min: 0,\n                sec: 60\n            },\n            numOfCorrectWords: 0,\n            numOfMistakes: 0,\n            keyStrokes: 0,\n            error: 0,\n            accuracy: 0,\n            numOfWordsTyped: 0,\n            timesUp: false,\n            isFetching: true,\n            isDone: false,\n            timerID: null,\n            started: false\n        })\n\n        axios\n            .get(`http://localhost:5000/api/${this.state.wordLength}/words`)\n            .then(res => res.data)\n            .then(data => {\n                this.setState(prevState => {\n                    prevState.words = data.words\n                    // set the first item the current item for highlighting\n                    prevState.words[this.state.index][0].isCurrent = true\n                    prevState.isFetching = false\n                    return prevState\n                })\n            })\n\n        clearInterval(this.state.timerID)\n    }\n\n    handleChange = e => {\n        if (e.target.name === 'wordlength') {\n            return this.setState({ wordLength: e.target.value })\n        }\n\n        let typed = e.target.value\n\n        this.setState(prevState => {\n            prevState.typedWord = typed\n            return prevState\n        })\n\n        // if the user started typing start timer\n        // decrement seconds every 1 sec\n        if (!this.state.started && this.state.typedWord.length >= 0) {\n            this.setState({ started: true })\n            const timer1 = setInterval(this.countDown, 1000)\n            !this.state.timerID && this.setState({ timerID: timer1 })\n        }\n\n        // grab the current WORD from the array\n        let currentWordFromState = this.state.words[this.state.index][\n            this.state.currentIndex\n        ].word\n\n        // grab the portion of the current word from the state\n        let currentWord = currentWordFromState.substring(\n            0,\n            this.state.letterIndex\n        )\n        // grab the portion of the typed word from input\n        let currentTyped = typed.substring(0, this.state.letterIndex)\n\n        // if words dont match\n        // change states so that the component will update\n        if (currentWord !== currentTyped) {\n            this.setState(prevState => {\n                prevState.words[this.state.index][\n                    this.state.currentIndex\n                ].isCorrect = false\n                prevState.words[this.state.index][\n                    this.state.currentIndex\n                ].isDoneTyping = true\n            })\n\n            // else everything typed is correct\n        } else {\n            this.setState(prevState => {\n                prevState.words[this.state.index][\n                    this.state.currentIndex\n                ].isDoneTyping = false\n            })\n        }\n    }\n\n    handleKeyPress = e => {\n        this.setState(prevState => (prevState.keyStrokes += 1))\n\n        // if backspace is pressed\n        // decrement letter index\n        if (e.which === 8) {\n            !this.state.letterIndex <= 0 &&\n                this.setState(prevState => (prevState.letterIndex -= 1))\n        } else {\n            this.setState(prevState => (prevState.letterIndex += 1))\n        }\n\n        // if space is pressed\n        if (e.which === 32) {\n            this.setState(prevState => {\n                prevState.letterIndex = 0\n                prevState.numOfWordsTyped += 1\n                prevState.error =\n                    ((prevState.numOfWordsTyped - prevState.numOfCorrectWords) /\n                        prevState.numOfWordsTyped) *\n                    100\n                prevState.accuracy = 100 - prevState.error\n                prevState.typedWord = ''\n                return prevState\n            })\n\n            // if the current item is the 20th item,\n            // reproduce new words\n            if (this.state.currentIndex >= 19) {\n                if (this.state.index >= this.state.words.length - 1) {\n                    console.log('done na!')\n                    this.setState(prevState => {\n                        prevState.isDone = true\n                        prevState.typedWord = ''\n                        return prevState\n                    })\n                    return\n                }\n\n                this.setState(prevState => {\n                    prevState.index += 1\n                    prevState.currentIndex = 0\n                    prevState.words[this.state.index][\n                        this.state.currentIndex\n                    ].isCurrent = false\n                    prevState.words[this.state.index + 1][0].isCurrent = true\n\n                    return prevState\n                })\n\n                let lastWordIndex =\n                    this.state.words[this.state.index].length - 1\n                let lastWord = this.state.words[this.state.index][lastWordIndex]\n                    .word\n\n                if (lastWord === this.state.typedWord) {\n                    this.setState(prevState => {\n                        prevState.isDoneTyping = true\n                        prevState.words[this.state.index][\n                            lastWordIndex\n                        ].isCurrent = false\n                        prevState.words[this.state.index][\n                            lastWordIndex\n                        ].isCorrect = true\n                        prevState.numOfCorrectWords += 1\n                        prevState.typedWord = ''\n                        return prevState\n                    })\n                }\n                return\n            }\n\n            // increment current index\n            this.setState(\n                prevState =>\n                    (prevState.currentIndex = prevState.currentIndex + 1)\n            )\n\n            // set the current item to true\n            // id dunno why i add 1 to the current index again\n            // a very small bug\n            this.setState(\n                prevState =>\n                    (prevState.words[this.state.index][\n                        this.state.currentIndex + 1\n                    ].isCurrent = true)\n            )\n\n            // set typed word to empty\n            this.setState(prevState => (prevState.typedWord = ''))\n\n            //get current index\n            let index = this.state.currentIndex\n            // grab the current word from the array\n            let currentWord = this.state.words[this.state.index][index].word\n\n            // check if entered word is correct or not\n            if (currentWord === this.state.typedWord) {\n                this.setState(prevState => {\n                    prevState.words[this.state.index][index].isCorrect = true\n                    prevState.words[this.state.index][index].isDoneTyping = true\n                    prevState.numOfCorrectWords += 1\n                    return prevState\n                })\n            } else {\n                this.setState(prevState => {\n                    prevState.words[this.state.index][index].isDoneTyping = true\n                    prevState.numOfMistakes += 1\n                    return prevState\n                })\n            }\n\n            // set the previous item as not the current item\n            this.setState(prevState => {\n                prevState.words[this.state.index][index].isCurrent = false\n                prevState.typedWord = ''\n                return prevState\n            })\n        }\n    }\n\n    render() {\n        const {\n            isFetching,\n            isDone,\n            time,\n            words,\n            index,\n            accuracy,\n            numOfWordsTyped,\n            numOfCorrectWords,\n            numOfMistakes,\n            keyStrokes,\n            typedWord,\n            wordLength\n        } = this.state\n\n        let displayComponent =\n            !isFetching &&\n            !isDone &&\n            words[index].map((item, index) => {\n                return <Word key={index} item={item} />\n            })\n\n        return (\n            <Fragment>\n                <div className=\"top\">\n                    <Header />\n                    <Brand />\n                </div>\n                <div className=\"parent\">\n                    <div\n                        className=\"display\"\n                        style={{\n                            height: (isFetching || isDone) && '20vh',\n                            width: '100%'\n                        }}\n                    >\n                        {displayComponent}\n                        {(isDone || isFetching) && (\n                            <Overlay\n                                state={isDone ? 'done' : 'fetching'}\n                                wpm={numOfWordsTyped}\n                            />\n                        )}\n                    </div>\n\n                    <div className=\"controls\">\n                        <Timer time={time} isDone={isDone} />\n\n                        <Input\n                            handleChange={this.handleChange}\n                            handleKeyPress={this.handleKeyPress}\n                            typedWord={typedWord}\n                            isDone={isDone}\n                            isFetching={isFetching}\n                        />\n\n                        <RetryButton handleClick={this.handleClick} />\n\n                        <WordLength\n                            handleChange={this.handleChange}\n                            wordLength={wordLength}\n                        />\n                    </div>\n\n                    <Result\n                        result={{\n                            accuracy: accuracy,\n                            numOfCorrectWords: numOfCorrectWords,\n                            numOfMistakes: numOfMistakes,\n                            keyStrokes: keyStrokes\n                        }}\n                    />\n                </div>\n\n                <Links />\n                <Footer />\n            </Fragment>\n        )\n    }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}